{"version":3,"sources":["Pages/Main/styles.ts","Pages/Main/App.tsx","Pages/OnComapny/OnCompany.tsx","Pages/TIL/TIL.tsx","Utils/Router.tsx","Slices/page.ts","store.ts","Hooks/reduxHook.ts","Layouts/Index/styles.ts","Layouts/Index/Header.tsx","Layouts/Index/Layouts.tsx","index.tsx"],"names":["AppStyled","styled","div","App","styleProps","useSpring","from","opacity","config","duration","loop","className","style","OnCompany","TIL","Router","exact","path","component","pageSlice","createSlice","name","initialState","pages","api","title","subTitle","reducers","store","configureStore","reducer","page","useSelector","reduxSelector","LayoutsStyled","HeaderStyled","Header","history","useHistory","state","afterChange","useCallback","currentSlide","push","location","pathname","map","ele","ind","onClick","Layouts","children","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"qNAEaA,EAAYC,IAAOC,IAAV,mZ,OC0BPC,EAxBH,WACV,IAAMC,EAAaC,oBAAU,CAC3BC,KAAM,CAAEC,QAAS,GACjBC,OAAQ,CAAEC,SAAU,MACpBC,KAAM,CACJH,QAAS,KAIb,OACE,cAACP,EAAD,UACE,eAAC,WAASE,IAAV,CACES,UAAU,eACVC,MAAOR,EAFT,UAIE,sBAAMO,UAAU,aAChB,oBAAIA,UAAU,aAAd,sCCdOE,EAJG,kBAChB,mDCKaC,EANH,kBACV,uCCaaC,EAVA,kBACb,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,cAAcC,UAAWL,IAC3C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,OAAOC,UAAWJ,U,gBCgB3BK,EANGC,YAAY,CAC5BC,KAAM,YACNC,aApB2B,CAC3BC,MAAO,CACL,CACEC,IAAK,IACLC,MAAO,QAET,CACED,IAAK,cACLC,MAAO,cAET,CACED,IAAK,OACLC,MAAO,MACPC,SAAU,mBAQdC,SAAU,KAGZ,QCfeC,EATDC,YAAe,CAC3BC,QAAS,CACPC,UCFSC,EAA+CC,ICD/CC,EAAgBjC,IAAOC,IAAV,+HAObiC,EAAelC,IAAOC,IAAV,8NCqBVkC,EAzBA,WACb,IAAMC,EAAUC,cACVf,EAAQS,GAAY,SAACO,GAAD,OAAWA,EAAMR,KAAKR,SAE1CiB,EAAcC,uBAAY,SAACC,GAC/BL,EAAQM,KAAKpB,EAAMmB,GAAclB,OAChC,CAACa,EAAQO,SAASC,WAErB,OACE,cAACV,EAAD,UAEIZ,EAAMuB,KAAI,SAACC,EAAKC,GAAN,OACR,sBACEC,QAAS,kBAAMT,EAAYQ,IAE3BrC,UAAU,aAHZ,SAKGoC,EAAItB,OAHAsB,EAAItB,aCLNyB,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,eAACjB,EAAD,WACE,cAAC,EAAD,IACCiB,MCFLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1B,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAe2B,SAAUC,SAAzB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,YAKRC,SAASC,eAAe,W","file":"static/js/main.2731494b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const AppStyled = styled.div`\n  @media screen and (hover: none) and (pointer: coarse) {\n    \n  }  \n        \n  display: block;\n  \n  .main-content {\n    display: block;\n    \n    text-align: center;\n  }\n  \n  .main-img {\n    display: block;\n    width: 300px;\n    height: 200px;\n    margin: 10vh auto;\n    \n    background-color: pink;\n  }\n  \n  \n  .main-title {\n    display: block;\n  }\n`;\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { AppStyled } from './styles';\n\nconst App = (): JSX.Element => {\n  const styleProps = useSpring({\n    from: { opacity: 0 },\n    config: { duration: 1600 },\n    loop: {\n      opacity: 1,\n    },\n  });\n\n  return (\n    <AppStyled>\n      <animated.div\n        className='main-content'\n        style={styleProps}\n      >\n        <span className='main-img' />\n        <h4 className='main-title'>\n          Hi This Is SuHyeon\n        </h4>\n      </animated.div>\n    </AppStyled>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst OnCompany = (): JSX.Element => (\n  <>On Company</>\n);\n\nexport default OnCompany;\n","import React from 'react';\n\nconst TIL = (): JSX.Element => (\n  <div>\n    til\n  </div>\n);\n\nexport default TIL;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport App from '../Pages/Main/App';\nimport OnCompany from '../Pages/OnComapny/OnCompany';\nimport TIL from '../Pages/TIL/TIL';\n\nconst Router = (): JSX.Element => (\n  <>\n    <Switch>\n      <Route exact path='/' component={App} />\n      <Route exact path='/on-company' component={OnCompany} />\n      <Route exact path='/til' component={TIL} />\n    </Switch>\n  </>\n);\n\nexport default Router;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { IPages } from '../Types';\n\nconst initialState: IPages = {\n  pages: [\n    {\n      api: '/',\n      title: 'Home',\n    },\n    {\n      api: '/on-company',\n      title: 'On Company',\n    },\n    {\n      api: '/til',\n      title: 'TIL',\n      subTitle: 'Today I Learn',\n    },\n  ],\n};\n\nconst pageSlice = createSlice({\n  name: 'pageSlice',\n  initialState,\n  reducers: {},\n});\n\nexport default pageSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport page from './Slices/page';\n\nconst store = configureStore({\n  reducer: {\n    page,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import { TypedUseSelectorHook, useDispatch as reduxDispatch, useSelector as reduxSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = reduxSelector;\n\nexport const useDispatch = () => reduxDispatch<AppDispatch>();\n","import styled from '@emotion/styled';\n\nexport const LayoutsStyled = styled.div`\n  @media screen and (hover: none) and (pointer: coarse) {\n  }\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const HeaderStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px 20vw;\n  \n  .url-button {\n    color: black;\n    font-weight: 700;\n    font-size: 18px;\n    \n    cursor: pointer;\n  }\n`;\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from '../../Hooks/reduxHook';\nimport { HeaderStyled } from './styles';\n\nconst Header = (): JSX.Element => {\n  const history = useHistory();\n  const pages = useSelector((state) => state.page.pages);\n\n  const afterChange = useCallback((currentSlide: number) => {\n    history.push(pages[currentSlide].api);\n  }, [history.location.pathname]);\n\n  return (\n    <HeaderStyled>\n      {\n        pages.map((ele, ind) => (\n          <span\n            onClick={() => afterChange(ind)}\n            key={ele.title}\n            className='url-button'\n          >\n            {ele.title}\n          </span>\n        ))\n      }\n    </HeaderStyled>\n  );\n};\n\nexport default Header;\n","import React, { ReactNode } from 'react';\nimport Header from './Header';\nimport { LayoutsStyled } from './styles';\n\ninterface Props {\n  children: ReactNode\n}\n\nconst Layouts = ({ children }: Props): JSX.Element => (\n  <LayoutsStyled>\n    <Header />\n    {children}\n  </LayoutsStyled>\n);\nexport default Layouts;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Router from './Utils/Router';\nimport './index.css';\nimport store from './store';\nimport Layouts from './Layouts/Index/Layouts';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Layouts>\n          <Router />\n        </Layouts>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}