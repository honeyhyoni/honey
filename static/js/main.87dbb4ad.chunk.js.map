{"version":3,"sources":["Pages/Main/App.tsx","Pages/OnComapny/OnCompany.tsx","Utils/Router.tsx","Slices/page.ts","store.ts","Hooks/reduxHook.ts","Layouts/Index/Header.tsx","Layouts/Index/Layouts.tsx","index.tsx"],"names":["App","OnCompany","Router","exact","path","component","pageSlice","createSlice","name","initialState","pages","api","label","reducers","store","configureStore","reducer","page","useSelector","reduxSelector","Header","state","map","to","Layouts","children","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"6LASeA,EAPH,kBACV,iDCGaC,EAJG,kBAChB,mDCWaC,EATA,kBACb,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,cAAcC,UAAWJ,U,gBCalCK,EANGC,YAAY,CAC5BC,KAAM,YACNC,aAf2B,CAC3BC,MAAO,CACL,CACEC,IAAK,IACLC,MAAO,QAET,CACED,IAAK,cACLC,MAAO,gBAQXC,SAAU,KAGZ,QCVeC,EATDC,YAAe,CAC3BC,QAAS,CACPC,UCFSC,EAA+CC,ICa7CC,EAZA,WACb,IAAMV,EAAQQ,GAAY,SAACG,GAAD,OAAWA,EAAMJ,KAAKP,SAEhD,OACE,mCACGA,EAAMY,KAAK,SAACL,GAAD,OACV,cAAC,IAAD,CAAMM,GAAIN,EAAKN,IAAf,SAAoCM,EAAKL,OAAhBK,EAAKN,WCGvBa,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,gCACE,cAAC,EAAD,IACCA,MCDLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAee,SAAUC,SAAzB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,YAKRC,SAASC,eAAe,W","file":"static/js/main.87dbb4ad.chunk.js","sourcesContent":["import React from 'react';\n\nconst App = (): JSX.Element => (\n  <>\n    app\n    test\n  </>\n);\n\nexport default App;\n","import React from 'react';\n\nconst OnCompany = (): JSX.Element => (\n  <>On Company</>\n);\n\nexport default OnCompany;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport App from '../Pages/Main/App';\nimport OnCompany from '../Pages/OnComapny/OnCompany';\n\nconst Router = (): JSX.Element => (\n  <>\n    <Switch>\n      <Route exact path='/' component={App} />\n      <Route exact path='/on-company' component={OnCompany} />\n    </Switch>\n  </>\n);\n\nexport default Router;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { IPages } from '../Types';\n\nconst initialState: IPages = {\n  pages: [\n    {\n      api: '/',\n      label: 'Home',\n    },\n    {\n      api: '/on-company',\n      label: 'On Company',\n    },\n  ],\n};\n\nconst pageSlice = createSlice({\n  name: 'pageSlice',\n  initialState,\n  reducers: {},\n});\n\nexport default pageSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport page from './Slices/page';\n\nconst store = configureStore({\n  reducer: {\n    page,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import { TypedUseSelectorHook, useDispatch as reduxDispatch, useSelector as reduxSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = reduxSelector;\n\nexport const useDispatch = () => reduxDispatch<AppDispatch>();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from '../../Hooks/reduxHook';\n\nconst Header = (): JSX.Element => {\n  const pages = useSelector((state) => state.page.pages);\n\n  return (\n    <>\n      {pages.map(((page) => (\n        <Link to={page.api} key={page.api}>{page.label}</Link>\n      )))}\n    </>\n  );\n};\n\nexport default Header;\n","import React, { ReactNode } from 'react';\nimport Header from './Header';\n\ninterface Props {\n  children: ReactNode\n}\n\nconst Layouts = ({ children }: Props): JSX.Element => (\n  <div>\n    <Header />\n    {children}\n  </div>\n);\nexport default Layouts;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Router from './Utils/Router';\nimport './index.css';\nimport store from './store';\nimport Layouts from './Layouts/Index/Layouts';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Layouts>\n          <Router />\n        </Layouts>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}