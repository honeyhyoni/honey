{"version":3,"sources":["Pages/Main/styles.ts","Pages/Main/App.tsx","Pages/OnComapny/OnCompany.tsx","Pages/TIL/TIL.tsx","Utils/Router.tsx","Slices/page.ts","store.ts","Hooks/reduxHook.ts","Layouts/Index/styles.ts","Layouts/Index/Header.tsx","Layouts/Index/Layouts.tsx","index.tsx"],"names":["AppStyled","styled","div","App","OnCompany","TIL","Router","exact","path","component","pageSlice","createSlice","name","initialState","pages","api","title","subTitle","reducers","store","configureStore","reducer","page","useSelector","reduxSelector","LayoutsStyled","HeaderStyled","Header","history","useHistory","state","settings","infinite","speed","initialSlide","map","ele","indexOf","location","pathname","slidesToShow","slidesToScroll","centerPadding","className","afterChange","useCallback","currentSlide","push","Layouts","children","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"6MAEaA,EAAYC,IAAOC,IAAV,iD,OCQPC,EAPH,kBACV,cAACH,EAAD,wBCEaI,EAJG,kBAChB,mDCKaC,EANH,kBACV,uCCaaC,EAVA,kBACb,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,cAAcC,UAAWL,IAC3C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,OAAOC,UAAWJ,U,4BCgB3BK,EANGC,YAAY,CAC5BC,KAAM,YACNC,aApB2B,CAC3BC,MAAO,CACL,CACEC,IAAK,IACLC,MAAO,QAET,CACED,IAAK,cACLC,MAAO,cAET,CACED,IAAK,OACLC,MAAO,MACPC,SAAU,mBAQdC,SAAU,KAGZ,QCfeC,EATDC,YAAe,CAC3BC,QAAS,CACPC,U,yBCFSC,EAA+CC,ICD/CC,EAAgBxB,IAAOC,IAAV,oEAMbwB,EAAezB,IAAOC,IAAV,qMC0CVyB,EA5CA,WACb,IAAMC,EAAUC,cAEVf,EAAQS,GAAY,SAACO,GAAD,OAAWA,EAAMR,KAAKR,SAO1CiB,EAAW,CACfC,UAAU,EACVC,MAAO,IACPC,aATiBpB,EAAMqB,KAAI,SAACC,GAAD,OAASA,EAAIrB,OAAKsB,QAAQT,EAAQU,SAASC,UAUtEC,aAAc,EACdC,eAAgB,EAChBC,cAAe,OACfC,UAAW,YACXC,YAZkBC,uBAAY,SAACC,GAC/BlB,EAAQmB,KAAKjC,EAAMgC,GAAc/B,OAChC,CAACa,EAAQU,SAASC,YAarB,OACE,cAACb,EAAD,UACE,cAAC,IAAD,2BAAYK,GAAZ,aACGjB,EAAMqB,KAAI,SAACb,GAAD,OACT,8BACE,oBAAGqB,UAAU,kBAAb,UACGrB,EAAKN,MACL,IACAM,EAAKL,UACJ,uBAAM0B,UAAU,sBAAhB,kBAEGrB,EAAKL,SAFR,eALIK,EAAKP,cCjBViC,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,eAACxB,EAAD,WACE,cAAC,EAAD,IACCwB,MCALC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjC,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAekC,SAAUC,SAAzB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,YAKRC,SAASC,eAAe,W","file":"static/js/main.4f20fc64.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const AppStyled = styled.div`\n    display: block;\n`;\n","import React from 'react';\nimport { AppStyled } from './styles';\n\nconst App = (): JSX.Element => (\n  <AppStyled>\n    app\n    test\n  </AppStyled>\n);\n\nexport default App;\n","import React from 'react';\n\nconst OnCompany = (): JSX.Element => (\n  <>On Company</>\n);\n\nexport default OnCompany;\n","import React from 'react';\n\nconst TIL = (): JSX.Element => (\n  <div>\n    til\n  </div>\n);\n\nexport default TIL;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport App from '../Pages/Main/App';\nimport OnCompany from '../Pages/OnComapny/OnCompany';\nimport TIL from '../Pages/TIL/TIL';\n\nconst Router = (): JSX.Element => (\n  <>\n    <Switch>\n      <Route exact path='/' component={App} />\n      <Route exact path='/on-company' component={OnCompany} />\n      <Route exact path='/til' component={TIL} />\n    </Switch>\n  </>\n);\n\nexport default Router;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { IPages } from '../Types';\n\nconst initialState: IPages = {\n  pages: [\n    {\n      api: '/',\n      title: 'Home',\n    },\n    {\n      api: '/on-company',\n      title: 'On Company',\n    },\n    {\n      api: '/til',\n      title: 'TIL',\n      subTitle: 'Today I Learn',\n    },\n  ],\n};\n\nconst pageSlice = createSlice({\n  name: 'pageSlice',\n  initialState,\n  reducers: {},\n});\n\nexport default pageSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport page from './Slices/page';\n\nconst store = configureStore({\n  reducer: {\n    page,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import { TypedUseSelectorHook, useDispatch as reduxDispatch, useSelector as reduxSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = reduxSelector;\n\nexport const useDispatch = () => reduxDispatch<AppDispatch>();\n","import styled from '@emotion/styled';\n\nexport const LayoutsStyled = styled.div`\n  @media (min-width: 1080px) {\n  }\n \n`;\n\nexport const HeaderStyled = styled.div`\n  display: block;\n  width: 65%;\n  margin: 25px auto;\n  \n  .menu-list {\n    text-align: center;\n    & > .slick-arrow {\n      background-color: green;\n    }\n  }\n`;\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport { useSelector } from '../../Hooks/reduxHook';\nimport { HeaderStyled } from './styles';\n\nconst Header = (): JSX.Element => {\n  const history = useHistory();\n\n  const pages = useSelector((state) => state.page.pages);\n  const slickIndex = pages.map((ele) => ele.api).indexOf(history.location.pathname);\n\n  const afterChange = useCallback((currentSlide: number) => {\n    history.push(pages[currentSlide].api);\n  }, [history.location.pathname]);\n\n  const settings = {\n    infinite: true,\n    speed: 500,\n    initialSlide: slickIndex,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    centerPadding: '10px',\n    className: 'menu-list',\n    afterChange,\n  };\n\n  return (\n    <HeaderStyled>\n      <Slider {...settings}>\n        {pages.map((page) => (\n          <div key={page.api}>\n            <p className='menu-item-title'>\n              {page.title}\n              {' '}\n              {page.subTitle && (\n                <span className='menu-item-sub-title'>\n                  (&nbsp;\n                  {page.subTitle}\n                  &nbsp;)\n                </span>\n              )}\n            </p>\n          </div>\n        ))}\n      </Slider>\n    </HeaderStyled>\n  );\n};\n\nexport default Header;\n","import React, { ReactNode } from 'react';\nimport Header from './Header';\nimport { LayoutsStyled } from './styles';\n\ninterface Props {\n  children: ReactNode\n}\n\nconst Layouts = ({ children }: Props): JSX.Element => (\n  <LayoutsStyled>\n    <Header />\n    {children}\n  </LayoutsStyled>\n);\nexport default Layouts;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Router from './Utils/Router';\nimport './index.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport store from './store';\nimport Layouts from './Layouts/Index/Layouts';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Layouts>\n          <Router />\n        </Layouts>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}